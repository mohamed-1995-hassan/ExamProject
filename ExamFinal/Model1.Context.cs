//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ExamFinal
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ExaminationSystemEntities1 : DbContext
    {
        public ExaminationSystemEntities1()
            : base("name=ExaminationSystemEntities1")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Choice> Choices { get; set; }
        public virtual DbSet<Cours> Courses { get; set; }
        public virtual DbSet<Department> Departments { get; set; }
        public virtual DbSet<Exam> Exams { get; set; }
        public virtual DbSet<Instructor> Instructors { get; set; }
        public virtual DbSet<Ques_Answer> Ques_Answer { get; set; }
        public virtual DbSet<Question> Questions { get; set; }
        public virtual DbSet<Std_Crs> Std_Crs { get; set; }
        public virtual DbSet<Student> Students { get; set; }
        public virtual DbSet<sysdiagram> sysdiagrams { get; set; }
        public virtual DbSet<Topic> Topics { get; set; }
    
        public virtual int f_Question(string type, string question)
        {
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var questionParameter = question != null ?
                new ObjectParameter("question", question) :
                new ObjectParameter("question", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("f_Question", typeParameter, questionParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> count_Answer(Nullable<int> std_id, Nullable<int> exam_id)
        {
            var std_idParameter = std_id.HasValue ?
                new ObjectParameter("std_id", std_id) :
                new ObjectParameter("std_id", typeof(int));
    
            var exam_idParameter = exam_id.HasValue ?
                new ObjectParameter("exam_id", exam_id) :
                new ObjectParameter("exam_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("count_Answer", std_idParameter, exam_idParameter);
        }
    
        public virtual int Exam_Answers(Nullable<int> exam_id, Nullable<int> quest_id, Nullable<int> stud_id, string answer, Nullable<int> degree)
        {
            var exam_idParameter = exam_id.HasValue ?
                new ObjectParameter("exam_id", exam_id) :
                new ObjectParameter("exam_id", typeof(int));
    
            var quest_idParameter = quest_id.HasValue ?
                new ObjectParameter("Quest_id", quest_id) :
                new ObjectParameter("Quest_id", typeof(int));
    
            var stud_idParameter = stud_id.HasValue ?
                new ObjectParameter("stud_id", stud_id) :
                new ObjectParameter("stud_id", typeof(int));
    
            var answerParameter = answer != null ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(string));
    
            var degreeParameter = degree.HasValue ?
                new ObjectParameter("degree", degree) :
                new ObjectParameter("degree", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("Exam_Answers", exam_idParameter, quest_idParameter, stud_idParameter, answerParameter, degreeParameter);
        }
    
        public virtual int ExamCreation(Nullable<int> id, string data, Nullable<System.TimeSpan> duration, string course)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var dataParameter = data != null ?
                new ObjectParameter("data", data) :
                new ObjectParameter("data", typeof(string));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("duration", duration) :
                new ObjectParameter("duration", typeof(System.TimeSpan));
    
            var courseParameter = course != null ?
                new ObjectParameter("course", course) :
                new ObjectParameter("course", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("ExamCreation", idParameter, dataParameter, durationParameter, courseParameter);
        }
    
        public virtual ObjectResult<ExamGenertator_multi_Result> ExamGenertator_multi(string course_name, Nullable<int> numOfMSQ)
        {
            var course_nameParameter = course_name != null ?
                new ObjectParameter("Course_name", course_name) :
                new ObjectParameter("Course_name", typeof(string));
    
            var numOfMSQParameter = numOfMSQ.HasValue ?
                new ObjectParameter("numOfMSQ", numOfMSQ) :
                new ObjectParameter("numOfMSQ", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExamGenertator_multi_Result>("ExamGenertator_multi", course_nameParameter, numOfMSQParameter);
        }
    
        public virtual ObjectResult<ExamGenertator_T_or_F_Result> ExamGenertator_T_or_F(string course_name, Nullable<int> numOfTF)
        {
            var course_nameParameter = course_name != null ?
                new ObjectParameter("Course_name", course_name) :
                new ObjectParameter("Course_name", typeof(string));
    
            var numOfTFParameter = numOfTF.HasValue ?
                new ObjectParameter("numOfTF", numOfTF) :
                new ObjectParameter("numOfTF", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<ExamGenertator_T_or_F_Result>("ExamGenertator_T_or_F", course_nameParameter, numOfTFParameter);
        }
    
        public virtual ObjectResult<Get_All_Degress_Result> Get_All_Degress()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Get_All_Degress_Result>("Get_All_Degress");
        }
    
        public virtual ObjectResult<GetAllInstructors_Result> GetAllInstructors()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllInstructors_Result>("GetAllInstructors");
        }
    
        public virtual ObjectResult<GetAllStudents_Result> GetAllStudents()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetAllStudents_Result>("GetAllStudents");
        }
    
        public virtual ObjectResult<string> GetChoice(string question)
        {
            var questionParameter = question != null ?
                new ObjectParameter("Question", question) :
                new ObjectParameter("Question", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("GetChoice", questionParameter);
        }
    
        public virtual ObjectResult<GetStdCourse_Result> GetStdCourse()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetStdCourse_Result>("GetStdCourse");
        }
    
        public virtual ObjectResult<GetTopics_Result> GetTopics()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<GetTopics_Result>("GetTopics");
        }
    
        public virtual int InsertChoice(Nullable<int> ques_id, string choice)
        {
            var ques_idParameter = ques_id.HasValue ?
                new ObjectParameter("Ques_id", ques_id) :
                new ObjectParameter("Ques_id", typeof(int));
    
            var choiceParameter = choice != null ?
                new ObjectParameter("choice", choice) :
                new ObjectParameter("choice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertChoice", ques_idParameter, choiceParameter);
        }
    
        public virtual int InsertCourses(string crs_name)
        {
            var crs_nameParameter = crs_name != null ?
                new ObjectParameter("crs_name", crs_name) :
                new ObjectParameter("crs_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertCourses", crs_nameParameter);
        }
    
        public virtual int InsertDepartment(string dept_name)
        {
            var dept_nameParameter = dept_name != null ?
                new ObjectParameter("dept_name", dept_name) :
                new ObjectParameter("dept_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertDepartment", dept_nameParameter);
        }
    
        public virtual int InsertExam(string data, Nullable<System.TimeSpan> duration, Nullable<int> course_id)
        {
            var dataParameter = data != null ?
                new ObjectParameter("data", data) :
                new ObjectParameter("data", typeof(string));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("duration", duration) :
                new ObjectParameter("duration", typeof(System.TimeSpan));
    
            var course_idParameter = course_id.HasValue ?
                new ObjectParameter("course_id", course_id) :
                new ObjectParameter("course_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InsertExam", dataParameter, durationParameter, course_idParameter);
        }
    
        public virtual ObjectResult<string> InsertIns_Course(Nullable<int> crs_ID, Nullable<int> ins_ID)
        {
            var crs_IDParameter = crs_ID.HasValue ?
                new ObjectParameter("crs_ID", crs_ID) :
                new ObjectParameter("crs_ID", typeof(int));
    
            var ins_IDParameter = ins_ID.HasValue ?
                new ObjectParameter("ins_ID", ins_ID) :
                new ObjectParameter("ins_ID", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertIns_Course", crs_IDParameter, ins_IDParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> InsertNewDepartment(Nullable<int> id, string name, ObjectParameter res)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("InsertNewDepartment", idParameter, nameParameter, res);
        }
    
        public virtual ObjectResult<string> InsertNewInst(Nullable<int> ins_id, string fname, string lname, Nullable<int> salary, Nullable<int> dept_id, Nullable<int> manager, Nullable<int> username)
        {
            var ins_idParameter = ins_id.HasValue ?
                new ObjectParameter("Ins_id", ins_id) :
                new ObjectParameter("Ins_id", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("Lname", lname) :
                new ObjectParameter("Lname", typeof(string));
    
            var salaryParameter = salary.HasValue ?
                new ObjectParameter("Salary", salary) :
                new ObjectParameter("Salary", typeof(int));
    
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("Dept_id", dept_id) :
                new ObjectParameter("Dept_id", typeof(int));
    
            var managerParameter = manager.HasValue ?
                new ObjectParameter("Manager", manager) :
                new ObjectParameter("Manager", typeof(int));
    
            var usernameParameter = username.HasValue ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertNewInst", ins_idParameter, fnameParameter, lnameParameter, salaryParameter, dept_idParameter, managerParameter, usernameParameter);
        }
    
        public virtual ObjectResult<string> InsertNewStudent(string fname, string lname, string address, Nullable<System.DateTime> dob, Nullable<int> dept_id, Nullable<int> username)
        {
            var fnameParameter = fname != null ?
                new ObjectParameter("Fname", fname) :
                new ObjectParameter("Fname", typeof(string));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("Lname", lname) :
                new ObjectParameter("Lname", typeof(string));
    
            var addressParameter = address != null ?
                new ObjectParameter("Address", address) :
                new ObjectParameter("Address", typeof(string));
    
            var dobParameter = dob.HasValue ?
                new ObjectParameter("Dob", dob) :
                new ObjectParameter("Dob", typeof(System.DateTime));
    
            var dept_idParameter = dept_id.HasValue ?
                new ObjectParameter("Dept_id", dept_id) :
                new ObjectParameter("Dept_id", typeof(int));
    
            var usernameParameter = username.HasValue ?
                new ObjectParameter("Username", username) :
                new ObjectParameter("Username", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertNewStudent", fnameParameter, lnameParameter, addressParameter, dobParameter, dept_idParameter, usernameParameter);
        }
    
        public virtual int insertQuestion(Nullable<int> examid, string ques, string answer, string type, Nullable<int> degree)
        {
            var examidParameter = examid.HasValue ?
                new ObjectParameter("Examid", examid) :
                new ObjectParameter("Examid", typeof(int));
    
            var quesParameter = ques != null ?
                new ObjectParameter("ques", ques) :
                new ObjectParameter("ques", typeof(string));
    
            var answerParameter = answer != null ?
                new ObjectParameter("answer", answer) :
                new ObjectParameter("answer", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            var degreeParameter = degree.HasValue ?
                new ObjectParameter("degree", degree) :
                new ObjectParameter("degree", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("insertQuestion", examidParameter, quesParameter, answerParameter, typeParameter, degreeParameter);
        }
    
        public virtual ObjectResult<string> InsertTopic(Nullable<int> crs_id, string top_Name)
        {
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("Crs_id", crs_id) :
                new ObjectParameter("Crs_id", typeof(int));
    
            var top_NameParameter = top_Name != null ?
                new ObjectParameter("Top_Name", top_Name) :
                new ObjectParameter("Top_Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("InsertTopic", crs_idParameter, top_NameParameter);
        }
    
        public virtual ObjectResult<Nullable<int>> Q_id()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("Q_id");
        }
    
        public virtual ObjectResult<Nullable<int>> QQ_id()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Nullable<int>>("QQ_id");
        }
    
        public virtual ObjectResult<string> QuestionAnswer(Nullable<int> e_id, Nullable<int> q_id, Nullable<int> s_id, string @as)
        {
            var e_idParameter = e_id.HasValue ?
                new ObjectParameter("e_id", e_id) :
                new ObjectParameter("e_id", typeof(int));
    
            var q_idParameter = q_id.HasValue ?
                new ObjectParameter("q_id", q_id) :
                new ObjectParameter("q_id", typeof(int));
    
            var s_idParameter = s_id.HasValue ?
                new ObjectParameter("s_id", s_id) :
                new ObjectParameter("s_id", typeof(int));
    
            var asParameter = @as != null ?
                new ObjectParameter("as", @as) :
                new ObjectParameter("as", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("QuestionAnswer", e_idParameter, q_idParameter, s_idParameter, asParameter);
        }
    
        public virtual ObjectResult<Select_Course_By_Name_Result> Select_Course_By_Name(string name)
        {
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Course_By_Name_Result>("Select_Course_By_Name", nameParameter);
        }
    
        public virtual ObjectResult<Select_Ins_Course_Result> Select_Ins_Course()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Ins_Course_Result>("Select_Ins_Course");
        }
    
        public virtual ObjectResult<Select_Question_Result> Select_Question()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_Question_Result>("Select_Question");
        }
    
        public virtual ObjectResult<Select_QuestionAnswer_Result> Select_QuestionAnswer()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<Select_QuestionAnswer_Result>("Select_QuestionAnswer");
        }
    
        public virtual ObjectResult<SelectCourses_Result> SelectCourses()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectCourses_Result>("SelectCourses");
        }
    
        public virtual ObjectResult<SelectDepartment_Result> SelectDepartment()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SelectDepartment_Result>("SelectDepartment");
        }
    
        public virtual ObjectResult<string> SelectExam(string courseName, Nullable<int> numOfQuesTrue, Nullable<int> numOfchoice)
        {
            var courseNameParameter = courseName != null ?
                new ObjectParameter("courseName", courseName) :
                new ObjectParameter("courseName", typeof(string));
    
            var numOfQuesTrueParameter = numOfQuesTrue.HasValue ?
                new ObjectParameter("numOfQuesTrue", numOfQuesTrue) :
                new ObjectParameter("numOfQuesTrue", typeof(int));
    
            var numOfchoiceParameter = numOfchoice.HasValue ?
                new ObjectParameter("numOfchoice", numOfchoice) :
                new ObjectParameter("numOfchoice", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<string>("SelectExam", courseNameParameter, numOfQuesTrueParameter, numOfchoiceParameter);
        }
    
        public virtual int sp_alterdiagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_alterdiagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_creatediagram(string diagramname, Nullable<int> owner_id, Nullable<int> version, byte[] definition)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var versionParameter = version.HasValue ?
                new ObjectParameter("version", version) :
                new ObjectParameter("version", typeof(int));
    
            var definitionParameter = definition != null ?
                new ObjectParameter("definition", definition) :
                new ObjectParameter("definition", typeof(byte[]));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_creatediagram", diagramnameParameter, owner_idParameter, versionParameter, definitionParameter);
        }
    
        public virtual int sp_dropdiagram(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_dropdiagram", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagramdefinition_Result> sp_helpdiagramdefinition(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagramdefinition_Result>("sp_helpdiagramdefinition", diagramnameParameter, owner_idParameter);
        }
    
        public virtual ObjectResult<sp_helpdiagrams_Result> sp_helpdiagrams(string diagramname, Nullable<int> owner_id)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<sp_helpdiagrams_Result>("sp_helpdiagrams", diagramnameParameter, owner_idParameter);
        }
    
        public virtual int sp_renamediagram(string diagramname, Nullable<int> owner_id, string new_diagramname)
        {
            var diagramnameParameter = diagramname != null ?
                new ObjectParameter("diagramname", diagramname) :
                new ObjectParameter("diagramname", typeof(string));
    
            var owner_idParameter = owner_id.HasValue ?
                new ObjectParameter("owner_id", owner_id) :
                new ObjectParameter("owner_id", typeof(int));
    
            var new_diagramnameParameter = new_diagramname != null ?
                new ObjectParameter("new_diagramname", new_diagramname) :
                new ObjectParameter("new_diagramname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_renamediagram", diagramnameParameter, owner_idParameter, new_diagramnameParameter);
        }
    
        public virtual int sp_upgraddiagrams()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("sp_upgraddiagrams");
        }
    
        public virtual int StudentFname(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("StudentFname", idParameter, nameParameter);
        }
    
        public virtual int UpdateChoices(Nullable<int> id, string choice)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var choiceParameter = choice != null ?
                new ObjectParameter("choice", choice) :
                new ObjectParameter("choice", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateChoices", idParameter, choiceParameter);
        }
    
        public virtual int UpdateCourseName(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("name", name) :
                new ObjectParameter("name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateCourseName", idParameter, nameParameter);
        }
    
        public virtual int UpdateDepartmentName(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateDepartmentName", idParameter, nameParameter);
        }
    
        public virtual int UpdateExamDuration(Nullable<int> id, Nullable<System.TimeSpan> duration)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var durationParameter = duration.HasValue ?
                new ObjectParameter("duration", duration) :
                new ObjectParameter("duration", typeof(System.TimeSpan));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateExamDuration", idParameter, durationParameter);
        }
    
        public virtual int UpdateInstructorDept(Nullable<int> id, string dept_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var dept_idParameter = dept_id != null ?
                new ObjectParameter("dept_id", dept_id) :
                new ObjectParameter("dept_id", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateInstructorDept", idParameter, dept_idParameter);
        }
    
        public virtual int UpdateInstructorFname(Nullable<int> id, string fname)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var fnameParameter = fname != null ?
                new ObjectParameter("fname", fname) :
                new ObjectParameter("fname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateInstructorFname", idParameter, fnameParameter);
        }
    
        public virtual int UpdateInstructorLname(Nullable<int> id, string lname)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var lnameParameter = lname != null ?
                new ObjectParameter("lname", lname) :
                new ObjectParameter("lname", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateInstructorLname", idParameter, lnameParameter);
        }
    
        public virtual int UpdateInstructorManager(Nullable<int> id, string manager)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var managerParameter = manager != null ?
                new ObjectParameter("manager", manager) :
                new ObjectParameter("manager", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateInstructorManager", idParameter, managerParameter);
        }
    
        public virtual int UpdateInstructorSalary(Nullable<int> id, string sal)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var salParameter = sal != null ?
                new ObjectParameter("sal", sal) :
                new ObjectParameter("sal", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateInstructorSalary", idParameter, salParameter);
        }
    
        public virtual int UpdateInstructorUsername(Nullable<int> id, string username)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateInstructorUsername", idParameter, usernameParameter);
        }
    
        public virtual int UpdateQuesAnswer(Nullable<int> id, string answer)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var answerParameter = answer != null ?
                new ObjectParameter("Answer", answer) :
                new ObjectParameter("Answer", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateQuesAnswer", idParameter, answerParameter);
        }
    
        public virtual int UpdateQuesOfChoice(Nullable<int> id, Nullable<int> choice_id)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var choice_idParameter = choice_id.HasValue ?
                new ObjectParameter("choice_id", choice_id) :
                new ObjectParameter("choice_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateQuesOfChoice", idParameter, choice_idParameter);
        }
    
        public virtual int UpdateQusetingAndType(Nullable<int> id, string qus, string type)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var qusParameter = qus != null ?
                new ObjectParameter("qus", qus) :
                new ObjectParameter("qus", typeof(string));
    
            var typeParameter = type != null ?
                new ObjectParameter("type", type) :
                new ObjectParameter("type", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateQusetingAndType", idParameter, qusParameter, typeParameter);
        }
    
        public virtual int UpdateStudentAddress(Nullable<int> id, string address)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var addressParameter = address != null ?
                new ObjectParameter("address", address) :
                new ObjectParameter("address", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStudentAddress", idParameter, addressParameter);
        }
    
        public virtual int UpdateStudentFname(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStudentFname", idParameter, nameParameter);
        }
    
        public virtual int UpdateStudentLname(Nullable<int> id, string name)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var nameParameter = name != null ?
                new ObjectParameter("Name", name) :
                new ObjectParameter("Name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStudentLname", idParameter, nameParameter);
        }
    
        public virtual int UpdateStudentUsername(Nullable<int> id, string username)
        {
            var idParameter = id.HasValue ?
                new ObjectParameter("id", id) :
                new ObjectParameter("id", typeof(int));
    
            var usernameParameter = username != null ?
                new ObjectParameter("username", username) :
                new ObjectParameter("username", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateStudentUsername", idParameter, usernameParameter);
        }
    
        public virtual int UpdateTopicForCourse(Nullable<int> topic_id, Nullable<int> crs_id)
        {
            var topic_idParameter = topic_id.HasValue ?
                new ObjectParameter("topic_id", topic_id) :
                new ObjectParameter("topic_id", typeof(int));
    
            var crs_idParameter = crs_id.HasValue ?
                new ObjectParameter("Crs_id", crs_id) :
                new ObjectParameter("Crs_id", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTopicForCourse", topic_idParameter, crs_idParameter);
        }
    
        public virtual int UpdateTopicName(Nullable<int> topic_id, string topic_name)
        {
            var topic_idParameter = topic_id.HasValue ?
                new ObjectParameter("topic_id", topic_id) :
                new ObjectParameter("topic_id", typeof(int));
    
            var topic_nameParameter = topic_name != null ?
                new ObjectParameter("Topic_name", topic_name) :
                new ObjectParameter("Topic_name", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("UpdateTopicName", topic_idParameter, topic_nameParameter);
        }
    }
}
